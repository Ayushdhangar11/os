#include <iostream>
#include <vector>
#include <cmath>
#include <algorithm>

#define max 199
#define min 0

void cScan(std::vector<int>& arr, int head, int n) {
    int seek = 0;

    // Sort the array
    std::sort(arr.begin(), arr.end());

    // Find the index of the head
    int index = -1;
    for (int i = 0; i < n; i++) {
        if (arr[i] == head) {
            index = i;
            break;
        }
    }

    // C-Scan
    for (int i = index; i < n - 1; i++) {
        std::cout << "\nHead moved from " << arr[i] << " to " << arr[i + 1];
        seek += std::abs(arr[i] - arr[i + 1]);
    }

    std::cout << "\nHead moved from " << arr[n - 1] << " to " << max;
    seek += std::abs(arr[n - 1] - max);

    std::cout << "\nHead moved from " << max << " to " << min;
    seek += std::abs(max - min);

    std::cout << "\nHead moved from " << min << " to " << arr[0];
    seek += std::abs(min - arr[0]);

    std::cout << "\nC-Scan Seek time = " << seek;
}

int main() {
    int n;

    std::cout << "Enter no. of requests: ";
    std::cin >> n;

    std::vector<int> arr(n);

    std::cout << "\nEnter requests: \n";
    for (int i = 0; i < n; i++) {
        std::cin >> arr[i];
    }

    int head;
    std::cout << "\nEnter head: ";
    std::cin >> head;

    arr.push_back(head);
    cScan(arr, head, n + 1);

    return 0;
}

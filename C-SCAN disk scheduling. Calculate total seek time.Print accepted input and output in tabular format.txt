#include <iostream>
#include <vector>
#include <cmath>
#include <algorithm>
#include <cstdlib>
#include <ctime>

#define max 199
#define min 0

void cScan(std::vector<int>& arr, int head, int n) {
    int seek = 0;

    // Sort the array
    std::sort(arr.begin(), arr.end());

    // Find the index of the head
    int index = -1;
    for (int i = 0; i < n; i++) {
        if (arr[i] == head) {
            index = i;
            break;
        }
    }

    // C-Scan
    for (int i = index; i < n - 1; i++) {
        std::cout << "\nHead moved from " << arr[i] << " to " << arr[i + 1];
        seek += std::abs(arr[i] - arr[i + 1]);
    }

    std::cout << "\nHead moved from " << arr[n - 1] << " to " << max;
    seek += std::abs(arr[n - 1] - max);

    std::cout << "\nHead moved from " << max << " to " << min;
    seek += std::abs(max - min);

    std::cout << "\nHead moved from " << min << " to " << arr[0];
    seek += std::abs(min - arr[0]);

    std::cout << "\nC-Scan Seek time = " << seek;
}

// Function to simulate input values automatically
void simulateInput(int &n, std::vector<int> &arr, int &head) {
    // Seed random number generator
    std::srand(static_cast<unsigned int>(std::time(0)));

    // Generate a random number of requests (between 5 and 10)
    n = std::rand() % 6 + 5;
    std::cout << "Simulating " << n << " requests:\n";

    // Generate random disk request sequence (between 0 and 199)
    arr.clear();
    for (int i = 0; i < n; i++) {
        arr.push_back(std::rand() % 200);  // Random number between 0 and 199
    }

    // Generate a random initial head position (between 0 and 199)
    head = std::rand() % 200;
    std::cout << "Generated request sequence: ";
    for (int req : arr) {
        std::cout << req << " ";
    }
    std::cout << "\nGenerated initial head position: " << head << std::endl;
}

int main() {
    int n, head;
    std::vector<int> arr;

    // Simulate input values
    simulateInput(n, arr, head);

    // Display accepted input in tabular format
    std::cout << "\nAccepted Input:" << std::endl;
    std::cout << "--------------------------" << std::endl;
    std::cout << "Request Sequence: ";
    for (int req : arr) {
        std::cout << req << " ";
    }
    std::cout << "\nInitial Head Position: " << head << std::endl;

    // Add the head position to the request list
    arr.push_back(head);

    // Calculate and display total seek time and details using C-Scan
    cScan(arr, head, n + 1);

    return 0;
}

#include <iostream>
#include <vector>
#include <cmath>
#include <algorithm>

int max = 199, min = 0;

void Sort(std::vector<int>& arr, int n)
{
    std::sort(arr.begin(), arr.end());
}

void Scan(std::vector<int>& arr, int head, int n)
{
    int index;
    Sort(arr, n);

    // Calculate head position
    for (int i = 0; i < n; i++)
    {
        if (arr[i] == head)
        {
            index = i;
            break;
        }
    }

    // Scan:
    for (int i = index; i < n - 1; i++)
    {
        std::cout << "\nHead moved from " << arr[i] << " to " << arr[i + 1];
    }
    std::cout << "\nHead moved from " << arr[n - 1] << " to " << max;
    std::cout << "\nHead moved from " << max << " to " << arr[index - 1];
    for (int i = index - 1; i > 0; i--)
    {
        std::cout << "\nHead moved from " << arr[i] << " to " << arr[i - 1];
    }

    int seek = std::abs(max - head) + std::abs(max - arr[0]);
    std::cout << "\nScan Seek time= " << seek;
}

int main()
{
    int n;
    std::cout << "Enter no. of requests: ";
    std::cin >> n;

    std::vector<int> arr(n);

    std::cout << "\nEnter requests: \n";
    for (int i = 0; i < n; i++)
    {
        std::cin >> arr[i];
    }

    int head;
    std::cout << "\nEnter head: ";
    std::cin >> head;

    arr.push_back(head);
    Scan(arr, head, n + 1);

    return 0;
}
